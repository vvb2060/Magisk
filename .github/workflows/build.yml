name: Magisk Build

on:
  push:
    branches: [ alpha ]
  pull_request:
    branches: [ alpha ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up GitHub env
        run: |
          ndk_ver=$(sed -n 's/^magisk.fullNdkVersion=//p' gradle.properties)
          echo ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT >> $GITHUB_ENV
          echo MAGISK_NDK_VERSION=$ndk_ver >> $GITHUB_ENV
        shell: bash

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: gradle-deps

      - name: Cache Gradle Builds
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-build-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: gradle-build

      - name: Cache NDK
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}/ndk/magisk
          key: ${{ runner.os }}-ndk-${{ env.MAGISK_NDK_VERSION }}

      - name: Ccache
        id: ccache-cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-ccache-

      - name: Download ccache
        id: ccache
        shell: cmake -P {0}
        env:
            CCACHE_VERSION: 4.2.1
        run: |
          set(ccache_url "https://github.com/cristianadam/ccache/releases/download/v$ENV{CCACHE_VERSION}/${{ runner.os }}.tar.xz")
          file(DOWNLOAD "${ccache_url}" ./ccache.tar.xz SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ccache.tar.xz)

      - name: Set up NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: python build.py ndk

      - name: Enable gradle cache
        run: |
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties

      - name: Build release
        run: |
          ./ccache -zp
          python build.py -vr all

      - name: Refresh flag
        run: touch gradle.properties
        shell: bash

      - name: Build debug
        run: |
          python build.py -v all
          ./ccache -s

      - name: Stop gradle daemon
        run: ./gradlew --stop

      # Only upload artifacts built on Linux
      - name: Upload build artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          path: out
